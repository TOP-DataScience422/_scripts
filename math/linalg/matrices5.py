from numpy import array, rint
from numpy.linalg import matrix_rank, inv
from numpy.random import default_rng


m1 = default_rng().integers(-9, 10, size=(2, 2))
# [[ 9  5]
#  [ 4 -6]]

# >>> matrix_rank(m1)
# np.int64(2)
# >>>
# >>> m1_inv = inv(m1)
# >>> print(m1_inv)
# [[ 0.08108108  0.06756757]
#  [ 0.05405405 -0.12162162]]
# >>>
# >>> m1_inv
# array([[ 0.08108108,  0.06756757],
#        [ 0.05405405, -0.12162162]])
# >>>
# >>> m1 @ m1_inv
# array([[ 1.00000000e+00,  0.00000000e+00],
#        [-5.55111512e-17,  1.00000000e+00]])
# >>>
# >>> rint(m1 @ m1_inv)
# array([[ 1.,  0.],
#        [-0.,  1.]])
# >>>
# >>> rint(m1_inv @ m1)
# array([[ 1., -0.],
#        [ 0.,  1.]])


m2 = default_rng().integers(-9, 10, size=(3, 3))
# [[-4 -8 -5]
#  [ 0 -9 -3]
#  [-2 -8  9]]

# >>> m2_inv = inv(m2)
# >>> m2_inv
# array([[-0.22727273,  0.24242424, -0.04545455],
#        [ 0.01298701, -0.0995671 , -0.02597403],
#        [-0.03896104, -0.03463203,  0.07792208]])
# >>>
# >>> rint(m2 @ m2_inv)
# array([[ 1., -0.,  0.],
#        [ 0.,  1.,  0.],
#        [ 0., -0.,  1.]])
# >>>
# >>> rint(m2_inv @ m2)
# array([[1., 0., 0.],
#        [0., 1., 0.],
#        [0., 0., 1.]])

m3 = array([
    [1, 2, 4],
    [2, 4, 8],
    [3, 6, 12],
])

# >>> m3
# array([[ 1,  2,  4],
#        [ 2,  4,  8],
#        [ 3,  6, 12]])
# >>>
# >>> matrix_rank(m3)
# np.int64(1)
# >>>
# >>> inv(m3)
# numpy.linalg.LinAlgError: Singular matrix


m4 = default_rng().integers(-9, 10, size=(2, 3))
# [[-2 -1 -6]
#  [ 9  2  6]]

# >>> matrix_rank(m4)
# np.int64(2)
# >>>
# >>> m4_inv = inv(m4)
# numpy.linalg.LinAlgError: Last 2 dimensions of the array must be square
# >>>
# >>> m4.T
# array([[-2,  9],
#        [-1,  2],
#        [-6,  6]])
# >>>
# >>> m4_WWt = m4 @ m4.T
# >>> m4_WWt
# array([[ 41, -56],
#        [-56, 121]])
# >>>
# >>> m4_WWt_inv = inv(m4_WWt)
# >>>
# >>> rint(m4_WWt_inv @ m4_WWt)
# array([[ 1., -0.],
#        [ 0.,  1.]])
# >>>
# >>> rint(m4_WWt @ m4_WWt_inv)
# array([[1., 0.],
#        [0., 1.]])
# >>>
# >>> m4_R = m4.T @ m4_WWt_inv
# >>> m4_R
# array([[ 0.14356164,  0.14082192],
#        [-0.00493151,  0.01424658],
#        [-0.21369863, -0.04931507]])
# >>>
# >>> rint(m4 @ m4_R)
# array([[ 1.,  0.],
#        [-0.,  1.]])


m5 = default_rng().integers(-9, 10, size=(4, 2))
# [[ 7  2]
#  [ 1 -8]
#  [-7 -1]
#  [-4  2]]

# >>> m5_TtT = m5.T @ m5
# >>> m5_TtT
# array([[115,   5],
#        [  5,  73]])
# >>>
# >>> m5_TtT_inv = inv(m5_TtT)
# >>>
# >>> rint(m5_TtT @ m5_TtT_inv)
# array([[1., 0.],
#        [0., 1.]])
# >>>
# >>> rint(m5_TtT_inv @ m5_TtT)
# array([[1., 0.],
#        [0., 1.]])
# >>>
# >>> m5_L = m5_TtT_inv @ m5.T
# >>> m5_L
# array([[ 0.05985663,  0.0135006 , -0.060454  , -0.03608124],
#        [ 0.02329749, -0.11051374, -0.00955795,  0.02986858]])
# >>>
# >>> rint(m5_L @ m5)
# array([[ 1., -0.],
#        [ 0.,  1.]])
# >>>
# >>> rint(m5 @ m5_L)
# array([[ 0., -0., -0., -0.],
#        [-0.,  1.,  0., -0.],
#        [-0.,  0.,  0.,  0.],
#        [-0., -0.,  0.,  0.]])
# >>>
# >>> m5 @ m5_L
# array([[ 0.4655914 , -0.1265233 , -0.44229391, -0.19283154],
#        [-0.1265233 ,  0.89761051,  0.01600956, -0.27502987],
#        [-0.44229391,  0.01600956,  0.43273596,  0.22270012],
#        [-0.19283154, -0.27502987,  0.22270012,  0.20406213]])
# >>>
# >>> m5_L @ m5
# array([[ 1.00000000e+00, -1.38777878e-17],
#        [ 2.77555756e-17,  1.00000000e+00]])

